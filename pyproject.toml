[build-system]
requires = [
    "setuptools",
    "setuptools-scm",
]
build-backend = "setuptools.build_meta"

[project]
name = "pamela"
version = "1.2.0"
dynamic = ["readme"]
description = "PAM interface using ctypes"
authors = [
  { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
  { name = "Min RK", email = "benjaminrk@gmail.com" },
]
keywords = ["pam", "authentication"]
license = { text = "MIT" }
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration :: Authentication/Directory",
]

[project.urls]
Homepage = "https://github.com/jupyterhub/pamela"
Funding = "https://jupyter.org/about"
Source = "https://github.com/jupyterhub/pamela"
Tracker = "https://github.com/jupyterhub/pamela/issues"


# dynamic sources of metadata in other files
[tool.setuptools.dynamic]
readme = { file = "README.md", content-type = "text/markdown" }

# setuptools_scm needs a section to be present
[tool.setuptools_scm]
# we don't actually use setuptools_scm for versions,
# only the file-finder
fallback_version = "0.0.0"


[tool.pytest.ini_options]
addopts = "--verbose --color=yes --durations=10"
testpaths = [
    "."
]

# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/jupyterhub/pamela"

[tool.tbump.version]
current = "1.2.0"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?P<pre>((a|b|rc)\d+)|)
  \.?
  (?P<dev>(?<=\.)dev\d*|)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# pyproject.toml location.

[[tool.tbump.file]]
src = "pamela.py"
